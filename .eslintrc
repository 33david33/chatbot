{
  "env": {
    "node": true,
    "browser": true,
    "es6": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "globals": {
    "fetch": false
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react"],
  "extends": [
    "airbnb",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "plugin:eslint-comments/recommended",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "ignorePatterns": ["*.json"],
  "rules": {
    "react/jsx-no-bind": [
      0,
      {
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
        "allowArrowFunctions": false,
        "allowFunctions": false,
        "allowBind": false
      }
    ],
    "no-console": ["error", { "allow": ["warn", "error", "info"] }],
    "no-unused-expressions": [
      2,
      { "allowShortCircuit": true, "allowTernary": true }
    ],
    "prefer-template": "error",
    "prefer-object-spread": "error",
    "no-prototype-builtins": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "react/prop-types": "off",
    "linebreak-style": "off",
    "object-curly-newline": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "react/no-array-index-key": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-filename-extension": [
      2,
      { "extensions": [".js", ".jsx", ".ts", ".tsx"] }
    ],
    "jsx-a11y/anchor-is-valid": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"]
  }
}
